<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.snow.freedomarmy.admin.app.dao.mapper.CommodityCommentMapper" >
  <resultMap id="BaseResultMap" type="com.snow.freedomarmy.admin.app.core.model.CommodityComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="commenttext" property="commenttext" jdbcType="VARCHAR" />
    <result column="commentimage" property="commentimage" jdbcType="VARCHAR" />
    <result column="commodityparent" property="commodityparent" jdbcType="INTEGER" />
    <result column="userparent" property="userparent" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, commenttext, commentimage, commodityparent, userparent
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.snow.freedomarmy.admin.app.core.model.CommodityCommentExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commodity_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from commodity_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from commodity_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.snow.freedomarmy.admin.app.core.model.CommodityCommentExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from commodity_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.snow.freedomarmy.admin.app.core.model.CommodityComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into commodity_comment (commenttext, commentimage, commodityparent, 
      userparent)
    values (#{commenttext,jdbcType=VARCHAR}, #{commentimage,jdbcType=VARCHAR}, #{commodityparent,jdbcType=INTEGER}, 
      #{userparent,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.snow.freedomarmy.admin.app.core.model.CommodityComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into commodity_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commenttext != null" >
        commenttext,
      </if>
      <if test="commentimage != null" >
        commentimage,
      </if>
      <if test="commodityparent != null" >
        commodityparent,
      </if>
      <if test="userparent != null" >
        userparent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commenttext != null" >
        #{commenttext,jdbcType=VARCHAR},
      </if>
      <if test="commentimage != null" >
        #{commentimage,jdbcType=VARCHAR},
      </if>
      <if test="commodityparent != null" >
        #{commodityparent,jdbcType=INTEGER},
      </if>
      <if test="userparent != null" >
        #{userparent,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.snow.freedomarmy.admin.app.core.model.CommodityCommentExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from commodity_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update commodity_comment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.commenttext != null" >
        commenttext = #{record.commenttext,jdbcType=VARCHAR},
      </if>
      <if test="record.commentimage != null" >
        commentimage = #{record.commentimage,jdbcType=VARCHAR},
      </if>
      <if test="record.commodityparent != null" >
        commodityparent = #{record.commodityparent,jdbcType=INTEGER},
      </if>
      <if test="record.userparent != null" >
        userparent = #{record.userparent,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update commodity_comment
    set id = #{record.id,jdbcType=INTEGER},
      commenttext = #{record.commenttext,jdbcType=VARCHAR},
      commentimage = #{record.commentimage,jdbcType=VARCHAR},
      commodityparent = #{record.commodityparent,jdbcType=INTEGER},
      userparent = #{record.userparent,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.snow.freedomarmy.admin.app.core.model.CommodityComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update commodity_comment
    <set >
      <if test="commenttext != null" >
        commenttext = #{commenttext,jdbcType=VARCHAR},
      </if>
      <if test="commentimage != null" >
        commentimage = #{commentimage,jdbcType=VARCHAR},
      </if>
      <if test="commodityparent != null" >
        commodityparent = #{commodityparent,jdbcType=INTEGER},
      </if>
      <if test="userparent != null" >
        userparent = #{userparent,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.snow.freedomarmy.admin.app.core.model.CommodityComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update commodity_comment
    set commenttext = #{commenttext,jdbcType=VARCHAR},
      commentimage = #{commentimage,jdbcType=VARCHAR},
      commodityparent = #{commodityparent,jdbcType=INTEGER},
      userparent = #{userparent,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>